%p.sg-p The purpose of this document is to define and outline the front-end development conventions that define this project. This document should act as a reference that designers, developers, project managers and clients can refer to to ensure that everyone has a common understanding of the project and is speaking the same language.



%h3.sg-h3 Folders

%h4.sg-h4 Initializers
%p.sg-p The initializers folder should contain any files that must be loaded in before other styling files. This might include things like variable definitions, color schemes, mixins, and grid systems. 

%h4.sg-h4 Objects
%p.sg-p This is where the bulk of the styling code should live. All components of the site should be broken down into self contained objects. An object should always consume as much width as is made available to it (this should only be defined by the grid system). Each object file should contain all of the various states the object can have including any adjustments that need to be made at specific breakpoints. The order the objects are loaded in should be irrelevant, as one object should not talk to another object. Within the objects directory lives a sub-directory named singletons. Singletons are objects that are only ever intented to appear once on the page like the site's header and footer for example.

%h4.sg-h4 Pages
%p.sg-p The pages folder should contain any page specific overrides that might be necessary. Ideally, this folder contains a minimal amount of code as objects should not require frequent page specific overrides (if they do, you should consider incorporating these changes into the object itself).



%h3.sg-h3 Naming

%p.sg-p The naming convention is loosely inspired by the principals outlined here: <a class="sg-a" href="http://thesassway.com/advanced/modular-css-naming-conventions">http://thesassway.com/advanced/modular-css-naming-conventions</a>. A basic summary is as follows:

%p.sg-p For styling purposes ID and tag selectors should be avoided, instead, only classes should be used. It is acceptable to use an ID for javascript purposes if deemed necessary. Dashes should be used to separate words instead of underscores or camelCasing.

%p.sg-p Names should be verbose and obvious. 
.sg-callout .button instead of .btn 

%p.sg-p When applicable, the "Plural Parent Pattern" should be used. 
.sg-callout tabs and tab 

%p.sg-p Modifiers should be separated from objects.
.sg-callout .primary.button instead of .primary-button 

%p.sg-p Related children should be prefixed with the object name.
.sg-callout .button-icon instead of .button > .icon 
